{% set loopback = (netbox.device_plugin.junos_interfaces['lo0']['ips'][4].keys() | list)[0].ip %}
bgp {
    log-updown;
    replace: group EVPN_IBGP {
        type internal;
        local-address {{ loopback }};
        family evpn {
            signaling;
        }
        {% set ibgp_peers = evpn_bgp.rr %}
        {% if loopback in evpn_bgp.rr.values() %}
        {% set ibgp_peers = dict(evpn_bgp.rr, **evpn_bgp.clients) %}
        cluster {{ loopback }};
        {% endif %}
        multipath;
        bfd-liveness-detection {
            minimum-interval 300;
            multiplier 3;
            /* T332295 */
            session-mode automatic;
        }
        {% for peer_name, peer_ip in ibgp_peers.items() if peer_ip != loopback %}
        neighbor {{ peer_ip }} {
            description {{ peer_name }};
        }
        {% endfor %}
    }
}
replace: evpn {
    vni-options {
        {% for vid in netbox.device.vlans.keys() | sort() %}
        vni 200{{ vid }} {
            vrf-target target:{{ asn }}:{{ vid }};
        }
        {% endfor %}
    }
    encapsulation vxlan;
    multicast-mode ingress-replication;
    extended-vni-list all;
}
replace: l2-learning {
    global-mac-table-aging-time 1200;
    global-mac-ip-table-aging-time 600;
}
