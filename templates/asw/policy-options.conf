{% include "includes/policies/common-prefix-lists.conf" %}
{% set asn = evpn_bgp.asn if evpn|d(false) else asn %}

{% if evpn | d(False) %}
prefix-list overlay_loopback4 {
   10.64.146.0/24;
   10.192.255.0/24;
}
prefix-list overlay_loopback6 {
   2620:0:861:11b::/64;
   2620:0:860:13f::/64;
}

policy-statement Default_evpn {
    /* Exports default route from EVPN, can be used on BGP peerings to end hosts to provide GW */
    term DEFAULT_V4 {
        from {
            protocol evpn;
            route-filter 0.0.0.0/0 exact;
        }
        then accept;
    }
    term DEFAULT_V6 {
        from {
            protocol evpn;
            route-filter ::/0 exact;
        }
        then accept;
    }
    then reject;
}

policy-statement Evpn_rt_import {
    /* Applied under switch options to define what EVPN networks to import routes for */
    term static_type1_rt {
        from community EVPN_TYPE1;
        then accept;
    }
    {% if netbox.device.vlans %}
    term l2vni {
        from community [ {% for vid in netbox.device.vlans.keys() | sort() -%} VNI200{{ vid }} {% endfor %}];
        then accept;
    }
    {% endif %}
    {% if netbox.device_plugin.vrfs %}
    term l3vni {
        {% for vrf_conf in netbox.device_plugin.vrfs.values() %}
        from community VNI300{{ vrf_conf.id }};
        {% endfor %}
        then accept;
    }
    {% endif %}
    then reject;
}

policy-statement export_evpn5 {
    /* Applied in routing-instance to control what is exported from local VRF as EVPN type 5 */
    term non_evpn {
        from protocol [ static local direct bgp ];
        then accept;
    }
    term evpn_host_routes {
        /* Export host routes from EVPN DB if they're on stretched vlan T329369 */
        from {
            protocol evpn;
            interface irb.0;
            {% for vlan_id, irb_conf in (netbox.device_plugin.junos_interfaces.irb|d({'sub': {}})).sub.items() if irb_conf.anycast_gw | d(false) %}
            interface irb.{{ vlan_id }};
            {% endfor %}
        }
        then accept;
    }
    then reject;
}

policy-statement core_evpn_out {
    term loopback4 {
        from {
            protocol [ direct evpn ];
            prefix-list-filter overlay_loopback4 longer;
        }
        then {
            /* Set BGP MED to OSPF cost from metric2 T332781 */
            metric {
                expression {
                    metric2 multiplier 10;
                }
            }
            accept;
        }
    }
    term loopback6 {
        from {
            protocol [ direct evpn ];
            prefix-list-filter overlay_loopback6 longer;
        }
        then {
            /* Set BGP MED to OSPF cost from metric2 T332781 */
            metric {
                expression {
                    metric2 multiplier 10;
                }
            }
            accept;
        }
    }
    term no_host_routes4 {
        /* Block remaining internal /32s from EVPN which will have come from ARP */
        from {
            protocol evpn;
            route-filter 0.0.0.0/0 prefix-length-range /32-/32;
            as-path-calc-length 0 equal;
        }
        then reject;
    }
    term no_host_routes6 {
        /* Block remaining internal /128s from EVPN which will have come from ND */
        from {
            protocol evpn;
            route-filter ::/0 prefix-length-range /128-/128;
            as-path-calc-length 0 equal;
        }
        then reject;
    }
    term overlay_routes {
        from protocol [ bgp evpn direct ];
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }
            }
            accept;
        }
    }
    then reject;
}

community EVPN_TYPE1 members target:{{ asn }}:9999;
{% for vid in netbox.device.vlans.keys() | sort() -%}
community VNI200{{ vid }} members target:{{ asn }}:{{ vid }};
{% endfor -%}
{% for vrf_conf in netbox.device_plugin.vrfs.values() %}
community VNI300{{ vrf_conf.id }} members target:{{ asn }}:{{ vrf_conf.id }};
{% endfor %}
{% else %}

policy-statement core_out {
    term host4 {
        from {
            protocol [ ospf direct bgp ];
            route-filter 0.0.0.0/0 prefix-length-range /32-/32;
        }
        then {
            metric {
                igp;
            }
            accept;
        }
    }
    term host6 {
        from {
            protocol [ ospf direct bgp ];
            route-filter ::/0 prefix-length-range /128-/128;
        }
        then {
            metric {
                igp;
            }
            accept;
        }
    }
    term subnet4 {
        from {
            protocol [ bgp direct ];
            route-filter 0.0.0.0/0 prefix-length-range /8-/29;
        }
        then {
            metric {
                igp;
            }
            accept;
        }
    }
    term subnet6 {
        from {
            protocol [ bgp direct ];
            route-filter ::/0 prefix-length-range /16-/64;
        }
        then {
            metric {
                igp;
            }
            accept;
        }
    }
    then reject;
}

policy-statement ibgp_out {
    term no_linknets4 {
        from {
            route-filter 0.0.0.0/0 prefix-length-range /31-/32;
            protocol direct;
        }
        then reject;
    }
    term no_linknets6 {
        from {
            route-filter ::/0 prefix-length-range /127-/128;
            protocol direct;
        }
        then reject;
    }
    term ibgp_reflected {
        /* RRs should leave next-hop unchanged on routes already in IBGP */
        from {
            protocol bgp;
            route-type internal;
        }
        then accept;
    }
    term server_addressing {
        from protocol [ bgp direct ];
        then {
            next-hop self;
            accept;
        }
    }
    then reject;
}
{% endif %}

{% include "includes/policies/common-policy-statements.conf" %}

{% for customer in customers|d({}) %}
{% include "includes/customers/" ~ customer ~ ".policy" %}
{% endfor %}

community AVOIDED_PATH members 14907:0;
community BACKUP_PATH members 14907:1;
community SELECTED_PATH members 14907:11;
community KUBERNETES members 14907:14;
as-path only_one_asn ".";

