{% include "includes/policies/common-prefix-lists.conf" %}

policy-statement Default_evpn {
    /* Exports default route from EVPN, can be used on BGP peerings to end hosts to provide GW */
    term DEFAULT_V4 {
        from {
            protocol evpn;
            route-filter 0.0.0.0/0 exact;
        }
        then accept;
    }
    term DEFAULT_V6 {
        from {
            protocol evpn;
            route-filter ::/0 exact;
        }
        then accept;
    }
    then reject;
}

policy-statement Evpn_rt_import {
    /* Applied under switch options to define what EVPN networks to import routes for */
    term static_type1_rt {
        from community EVPN_TYPE1;
        then accept;
    }
    term l2vni {
        from community [ {% for vid in netbox.device.vlans.keys() | sort() -%} VNI200{{ vid }} {% endfor %}];
        then accept;
    }
    term l3vni {
        {% for vrf_conf in netbox.device_plugin.vrfs.values() %}
        from community VNI300{{ vrf_conf.id }};
        {% endfor %}
        then accept;
    }
    then reject;
}

policy-statement export_evpn5 {
    /* Applied in routing-instance to control what is exported from local VRF as EVPN type 5 */
    term direct {
        from protocol direct;
        then accept;
    }
    term static {
        from protocol static;
        then {
            accept;
        }
    }
    term local {
        from protocol local;
        then accept;
    }
    term bgp {
        from protocol bgp;
        then accept;
    }
    then reject;
}

policy-statement Ext_out6 {
    /* Controls export of routes from VRF to external peers. */
    term lvs {
        from {
            protocol [ bgp evpn ];
            as-path local_lvs;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    term evpn_k8_anycast {
        from {
            protocol [ bgp evpn ];
            as-path local_k8_anycast;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    term loopbacks {
        from {
            protocol [ direct evpn local ];
            prefix-list-filter switch_loopback6 longer;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    term networks {
        from {
            protocol [ direct evpn ];
            route-filter ::/0 prefix-length-range /0-/125;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    then reject;
}

policy-statement Ext_out4 {
    /* Controls export of routes from VRF to external peers */
    term lvs {
        from {
            protocol [ bgp evpn ];
            as-path local_lvs;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                           
            }
            accept;
        }
    }
    term k8_anycast {
        from {
            protocol [ bgp evpn ];
            as-path local_k8_anycast;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    term loopbacks {
        from {
            protocol [ direct evpn local ];
            prefix-list-filter switch_loopback4 longer;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    term networks {
        from {
            protocol [ direct evpn ];
            route-filter 0.0.0.0/0 prefix-length-range /0-/29;
        }
        then {
            metric {
                expression {
                    metric2 multiplier 10;
                }                        
            }
            accept;
        }
    }
    then reject;
}

{% include "includes/policies/common-policy-statements.conf" %}

{% if customers is defined %}
{% for customer in customers %}

{% include "includes/customers/" ~ customer ~ ".policy" %}
{% endfor %}
{% endif %}

community EVPN_TYPE1 members target:{{ asn }}:9999;
{% for vid in netbox.device.vlans.keys() | sort() -%}
community VNI200{{ vid }} members target:{{ asn }}:{{ vid }};
{% endfor -%}
{% for vrf_conf in netbox.device_plugin.vrfs.values() %}
community VNI300{{ vrf_conf.id }} members target:{{ asn }}:{{ vrf_conf.id }};
{% endfor %}
community KUBERNETES members 14907:14;
as-path local_lvs "^64600$";
as-path local_k8_anycast "^[64601-64609]$";
as-path only_one_asn ".";

