replace: interfaces {
    {% for name, config in netbox.device_plugin.junos_interfaces.items() | sort() %}
    {{ name }} {
        {% if not config['enabled'] | d(true) %}
        disable;
        {% elif config['mtu'] | d(false) %}
        mtu {{ config['mtu'] }};
        {% elif 'mode' in config %}
        /* MTU needs to be set in Netbox - Default of 9192 applied - see T329799 */
        mtu 9192;
        {% endif %}
        {% if config['description'] | d(false) and not (netbox.device.virtual_chassis_members and name.startswith('em')) %}
        description "{{ config['description'] }}";
        {% endif -%}
        {% if 'ae' in name and config['enabled'] -%}
        aggregated-ether-options {
            lacp {
                active;
                periodic fast;
            }
        }
        {% endif -%}
        {% if 'lag' in config -%}
        ether-options {
            802.3ad {{ config['lag'] }};
        }
        {% endif -%}
        {% if 'mode' in config %}
        {% if 'native_vlan_id' in config %}
        native-vlan-id {{ config['native_vlan_id'] }};
        {% endif %}
        unit 0 {
            family ethernet-switching {
                {% if config['mode'] == 'tagged' %}
                interface-mode trunk;
                {% else %}
                interface-mode access;
                {% endif %}
                vlan {
                    members [ {{ config['vlans']|sort|join(' ') }} ];
                }
            }
        }
        {% endif %}
        {% if 'ips' in config %}
        unit 0 {
            {% for ipversion in [ 4, 6] %}
            {% if config['ips'][ipversion] %}
            family inet{{ ipversion | trim('4') }} {
                {% for ip in config['ips'][ipversion].keys() %}
                address {{ ip }};
                {% endfor %}
                filter {
                    {% if 'lo0' in name -%}
                    input loopback{{ ipversion }};
                    {% endif -%}
                    {% if name + '.0' + '-in' in filters | d({}) %}
                    input {{ filters[name + '.0' + '-in'] }}{{ ipversion }};
                    {% elif name ~ '.0' ~ '-in' ~ ipversion in filters | d({}) %}
                    input {{ filters[name ~ '.0' ~ '-in' ~ ipversion] }}{{ ipversion }};
                    {% endif %}
                    {% if name + '.0' + '-out' in filters | d({}) %}
                    output {{ filters[name + '.0' + '-out'] }}{{ ipversion }};
                    {% endif %}
                }
            }
            {% endif %}
            {% endfor %}
        }
        {% endif %}
        {% if 'sub' in config and not 'lag' in config %}
        {% if not name.startswith(('irb', 'vlan', 'gr', 'lo'))  %}
        vlan-tagging;
        encapsulation flexible-ethernet-services;
        {% endif -%}
        {% for sub_name, sub_config in config['sub'].items() if sub_name != "0" %}
        unit {{ sub_name }} {
            {% if not name.startswith(('irb', 'vlan', 'gr', 'lo')) -%}
            vlan-id {{ sub_name }};
            {% endif -%}
            {% if name + '.' + sub_name in tunnels | d({}) %}
            tunnel {
                source {{ tunnels[name + '.' + sub_name]['source'] }};
                destination {{ tunnels[name + '.' + sub_name]['destination'] }};
            }
            {% endif %}
            {% if sub_config['description'] | d(false) -%}
            description "{{ sub_config['description'] }}";
            {% endif -%}
            {% for ipversion in [ 4, 6] -%}
            {% if sub_config['ips'][ipversion] -%}
            family inet{{ ipversion | trim('4') }} {
                {% if sub_config['mtu'] != config['mtu'] | d(false) and sub_config['mtu'] %}
                mtu {{ sub_config['mtu'] }};
                {% endif %}
                filter {
                    {% if name + '.' + sub_name + '-in' in filters | d({}) -%}
                    input {{ filters[name + '.' + sub_name + '-in'] }}{{ ipversion }};
                    {% elif name ~ '.' ~ sub_name ~ '-in' ~ ipversion in filters | d({}) -%}
                    input {{ filters[name ~ '.' ~ sub_name ~ '-in' ~ ipversion] }}{{ ipversion }};
                    {% endif -%}
                    {% if name + '.' + sub_name + '-out' in filters | d({}) -%}
                    output {{ filters[name + '.' + sub_name + '-out'] }}{{ ipversion }};
                    {% endif -%}
                }
                {% if 'ips' in sub_config -%}
                {% for ip, ip_config in sub_config['ips'][ipversion].items() -%}
                {% if 'vrrp' in ip_config -%}
                address {{ ip }} {
                    {% for vrrp_ip, vrrp_group in ip_config['vrrp'].items() %}
                    {% set v6mod = 'inet6-' if ipversion == 6 else '' %}
                    vrrp-{{ v6mod }}group {{ vrrp_group }} {
                        virtual-{{ v6mod }}address {{ vrrp_ip }};
                        accept-data;
                    }
                    {% endfor %}
                }
                {% else %}
                address {{ ip }};
                {% endif %}
                {% endfor -%}
                {% endif -%}
            }
            {% endif -%}
            {% endfor -%}
        }
        {% endfor %}
        {% endif %}
    }
    {% endfor %}
}
