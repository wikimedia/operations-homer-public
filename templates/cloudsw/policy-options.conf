{% include "includes/policies/common-prefix-lists.conf" %}

prefix-list cloud-out {
    172.16.0.0/17;
    172.16.128.0/17;
    185.15.56.0/24;
    185.15.57.0/27;
    208.80.153.184/29;
}
prefix-list cloud-out6 {
    2a02:ec80:a000::/48;
    2a02:ec80:a100::/48;
}
prefix-list wikimedia4 {
    91.198.174.0/24;
    185.15.56.0/22;
    185.71.138.0/24;
    198.35.26.0/23;
    208.80.152.0/22;
    103.102.166.0/24;
}
prefix-list cloud_vips {
    172.20.254.0/23;
    185.15.56.160/28;
    185.15.57.24/29;
}
prefix-list cloud_vips6 {
    2a02:ec80:a000:2ff::/64;
    2a02:ec80:a000:4000::/64;
    2a02:ec80:a100:2ff::/64;
    2a02:ec80:a100:4000::/64;
}
policy-statement cloud_server_bgp {
    term cloud_vips {
        from {
            prefix-list-filter cloud_vips orlonger;
        }
        then accept;
    }
    then reject;
}
policy-statement cloud_server_bgp6 {
    term cloud_vips {
        from {
            prefix-list-filter cloud_vips6 orlonger;
        }
        then accept;
    }
    then reject;
}
policy-statement Cloud_outfilter {
    term cloud_out {
        from {
            protocol [ bgp static aggregate direct ];
            prefix-list cloud-out;
        }
        then accept;
    }
    then reject;
}
policy-statement Cloud_outfilter6 {
    term cloud_out6 {
        from {
            protocol [ bgp static aggregate direct ];
            prefix-list cloud-out6;
        }
        then accept;
    }
    then reject;
}

policy-statement Prod_outfilter {
    term loopbacks4 {
        from {
            protocol ospf;
            route-filter 0.0.0.0/0 prefix-length-range /32-/32;
        }
        then {
            metric 0;
            accept;
        }
    }
    term loopbacks6 {
        from {
            protocol ospf3;
            route-filter ::/0 prefix-length-range /128-/128;
        }
        then {
            metric 0;
            accept;
        }
    }
    term private4 {
        from {
            protocol [ bgp direct static ];
            prefix-list-filter private4 longer;
        }
        then accept;
    }
    term private6 {
        from {
            protocol [ bgp direct static ];
            prefix-list-filter private6 longer;
        }
        then accept;
    }
    then reject;
}

policy-statement load-balance {
    /* The per-packet is legacy language, the hardware only does per-flow load-balancing and this is how you enable it. */
    then {
        load-balance per-packet;
    }
}

policy-statement sw_ibgp {
    term locals {
        from protocol [ direct static ];
        then {
            next-hop self;
            accept;
        }
    }
    term ebgp {
        from {
            protocol bgp;
            route-type external;
        }
        then {
            next-hop self;
            accept;
        }
    }
    term ibgp {
        from {
            protocol bgp;
            route-type internal;
        }
        then accept;
    }
    then reject;
}

policy-statement NONE {
    then reject;
}
