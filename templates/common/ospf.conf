protocols {
    {% for protocol in ['ospf', 'ospf3'] %}
    replace: {{ protocol }} {
        {% if protocol == 'ospf' %}
        apply-groups ospf-auth;
        {% endif %}
        export ospf_export;
        reference-bandwidth 100g;
        area 0.0.0.0 {
            {% for interface in ospf.p2p if hostname in interface.keys() %}
            interface {{ interface[hostname] }} {
                interface-type p2p;
                {% if interface.metric | d(False) %}
                metric {{ interface.metric }};
                {% endif %}
                {% if interface.bfd | d(False) %}
                bfd-liveness-detection {
                    minimum-interval 300;
                }
                {% endif %}
            }
            {% endfor %}
            {% for local_int, circuit in netbox.device.circuits.items() if circuit['type']['slug'] == 'transport' and circuit['custom_fields']['state'] and circuit['status']['value'] == 'active' %}
            interface {{ local_int ~ '.0' }} {
                interface-type p2p;
                {% if circuit['custom_fields']['state']['label'] == 'preferred' %}
                metric {{ ( circuit['custom_fields']['metric'] * 0.5 ) | round | int }};
                {% elif circuit['custom_fields']['state']['label'] == 'drained' %}
                metric 5000;
                {% elif (circuit['custom_fields']['metric'] | int) != 0 %}
                metric {{ circuit['custom_fields']['metric'] | int }};
                {% endif %}
                bfd-liveness-detection {
                    minimum-interval 300;
                }
            }
            {% endfor %}
            interface lo0.0 {
                passive;
            }
            {% if hostname in ospf.stub %}
            {% for interface in ospf.stub[hostname] %}
            interface {{ interface }} {
                passive;
            }
            {% endfor %}
            {% endif %}
        }
    }
    {% endfor %}
}
