{% if mgmt_ip is not defined or mgmt_ip|length == 1 %}
host-name {{ hostname.split('.')[0] }};
{% endif %}
domain-name {{ ".".join(hostname.split('.')[1:]) }};
{% if mgmt_gw is defined and metadata.role != 'mr' %}
backup-router {{ mgmt_gw }};
{% endif %}
time-zone UTC;
/* Prefer the primary (loopback) address for locally generated packets */
default-address-selection;
no-redirects;
{% if metadata.role == 'cr' -%}
arp {
    /* So the backup VRRP node can transition smoothly as primary */
    passive-learning;
}
{% endif %}
{% if evpn | d(false) -%}
arp {
    aging-timer 10;
}
{% endif -%}
{% if mgmt_junos | d(true) and mgmt_gw is defined -%}
management-instance;
{% endif %}
internet-options {
   tcp-drop-synfin-set;
   no-tcp-reset drop-all-tcp;
}
root-authentication {
    encrypted-password "{{ junos_root_password }}"; ## SECRET-DATA
}
name-server {
    {% if mgmt_junos | d(true) and mgmt_gw is defined -%}
    10.3.0.1 routing-instance mgmt_junos;
    {% else %}
    10.3.0.1;
    {% endif %}
}
login {
    {% if metadata.role == 'mr' -%}
    retry-options {
        tries-before-disconnect 5;
        backoff-threshold 1;
        backoff-factor 10;
    }
    {% endif %}
    {{ login() }}
}
services {
    ssh {
        root-login deny;
        no-passwords;
        protocol-version v2;
        sftp-server;
        ciphers [ aes128-ctr aes192-ctr aes256-ctr ];
        macs [ hmac-sha2-256 hmac-sha2-512 ];
        key-exchange group-exchange-sha2;
        hostkey-algorithm {
            no-ssh-dss;
        }
    }
    {% if metadata.role in ['asw', 'cr', 'cloudsw'] %}
    extension-service {
        request-response {
            grpc {
                ssl {
                    port 32767;
                    local-certificate {{ hostname.split('.')[0] }}-cert;
                }
                {% if mgmt_junos | d(true) and '.mgmt.' in hostname -%}
                routing-instance mgmt_junos;
                {% endif %}
            }
        }
    }
    {% endif %}
    netconf {
        ssh;
    }
}
syslog {
    user * {
        any emergency;
    }
    file messages {
        any info;
    }
    host librenms.wikimedia.org {
        match "!(RT_FLOW)";
        allow-duplicates;
        any info;
    }
    host syslog.anycast.wmnet {
        any info;
        allow-duplicates;
        port 10514;
        facility-override local3;
    }
    {% if mgmt_junos | d(true) and mgmt_gw is defined -%}
    routing-instance mgmt_junos;
    {% endif %}
}
{% if metadata.role == 'mr' %}
max-configurations-on-flash 5;
max-configuration-rollbacks 5;
{% else %}
max-configurations-on-flash 10;
{% endif %}
{% if netbox.device.virtual_chassis_members or ( mgmt_ip is defined and mgmt_ip  | count == 2 ) -%}
commit synchronize;
{% endif %}
{% if netbox.device.inventory | selectattr("role") | map(attribute='role') | selectattr("slug", "==", 'license') | list | length > 0 %}
license {
    keys {
{% for item in netbox.device.inventory if item.role and item.role.slug == "license" | d([]) %}
        key "{{ item['serial'] }} {{ item.custom_fields['license_key'] }}";
{% endfor %}
    }
}
{% endif %}
ntp {
    {% for server in ntp_servers -%}
    {% if mgmt_junos | d(true) and mgmt_gw is defined -%}
    server {{ server }} routing-instance mgmt_junos;
    {% else %}
    server {{ server }};
    {% endif %}
    {% endfor %}
}
