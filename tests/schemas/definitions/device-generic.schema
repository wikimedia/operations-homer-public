{
  "$id": "device-generic.schema",
  "definitions": {
    "bgp_neighbor_single_af": {
      "type": "object",
      "description": "Used to define BGP peering to a single IP.",
      "additionalProperties": {
        "type": "string",
        "format": ["ipv4", "ipv6"]
      }
    },
    "bgp_neighbor_dual_af": {
      "type": "object",
      "description": "Used to define BGP peerings to a pair of IPs, one for v4 one for v6",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "4": {
            "type": "string",
            "format": "ipv4"
          },
          "6": {
            "type": "string",
            "format": "ipv6"
          },
          "peer_as": {
            "type": "integer"
          }
        },
        "required": [4, 6]
      }
    },
    "bgp_neighbor_opt_v6": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "4": {
            "type": "string",
            "format": "ipv4"
          },
          "6": {
            "type": "string",
            "format": "ipv6"
          }
        },
        "required": [4]
      }
    }
  },
  "type": "object",
  "additionalProperties" : false,
  "properties": {
    "mgmt_ip": {
      "type": "array",
      "description": "List of addr/netmask for mgmt interfaces; if specified, one per RE.",
      "prefixItems": [
        {
          "type": "string",
          "format": "ip_interface",
          "minProperties": 2
        }
      ]
    },
    "fpcs_to_sample": {
      "type": "array",
      "description": "List of FPC indices on which to enable jflow sampling.",
      "minProperties": 1,
      "prefixItems": [
        {
          "type": "integer"
        }
      ]
    },
    "transits": {
      "type": "object",
      "format": ["ipv4", "ipv6"],
      "description": "BGP peer IP",
      "additionalProperties" : {
        "type": "object",
        "additionalProperties" : false,
        "properties": {
          "provider": {
            "type": "string",
            "description": "one of common.yaml transit_providers"
          },
          "import_policy": {
            "type": "boolean",
            "description": "Generate the policy based on the peer ASN."
          },
          "export_policy": {
            "type": "boolean",
            "description": "Generate the policy based on the peer ASN."
          },
          "shutdown": {
            "type": "boolean"
          }
        },
        "required": [
           "provider"
        ]
      }
    },
    "filters": {
      "type": "object",
      "description": "Extra firewall filters to apply to interfaces.",
      "additionalProperties" : false,
      "patternProperties": {
        "^.+$": {
              "type": "string",
              "desciption": "ae1.530-in: foo    Apply foo as input to both inet and inet6 (if any)\nae1.530-in4: foo   Apply foo as input only to inet (even if inet6 exists)\ngr-0/0/0.2-out: bar   Apply bar as output to both inet and inet6"
        }
      }
    },
    "urpf_strict": {
      "type": "array",
      "minProperties": 1,
      "description": "Enable uRPF filtering in strict mode for any interfaces in this list.",
      "prefixItems": [
        {
          "type": "string",
          "description": "Interface with sub interface (eg. xe-1/0/1.1234 or xe-1/0/1.0)"
        }
      ]
    },
    "vrrp_bandwidth_threshold": {
      "type": "boolean",
      "description": "In a LACP bundle, configure VRRP to failover on the loss of one link."
    },
    "vrrp_priority": {
      "type": "integer",
      "description": "Override priority for every VRRP, useful for forced failover/maintenance. Highest number wins; default when unspecified is 100. Remove any vrrp_master_pinning config on both devices before using as it takes precedence."
    },
    "vrrp_master_pinning": {
      "type": "array",
      "minProperties": 1,
      "description": "Pin (sub)interfaces to a given device (sets its VRRP priority to 110)",
      "prefixItems": [
        {
          "type": "string",
          "description": "ae1  # Interface and all sub-interfaces; xe-1/0/1.1234  # Specific sub-interface"
        }
      ]
    },
    "damping": {
      "type": "array",
      "description": "Enable interface flap damping.",
      "minProperties": 1,
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "primary_ixp": {
      "type": "boolean",
      "description": "Set if the IXP terminating on that router should be prioritized."
    },
    "tcp_mss_clamping": {
      "type": "boolean",
      "description": "Clamps outbound tcp-mss to 1436. Usually applied per site."
    },
    "prepend_as_out": {
      "type": "boolean",
      "description": "Prepends our AS# 3x to our peering and transits. Usually applied per site."
    },
    "dhcp_pool": {
      "type": "string",
      "format": "ip_network"
    },
    "minimum_links": {
      "type": "object",
      "description": "For AE interfaces only, take the interface down if the bundle doesn't have at least X healthy members.",
      "additionalProperties": {
          "type": "integer"
      }
    },
    "lldp_disabled": {
      "type": "array",
      "minProperties": 1,
      "description": "Don't send LLDP frames on those interfaces as SRXs show L2 errors when receiving them.",
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "flowspec_flows": {
      "type": "object",
      "additionalProperties" : false,
      "description": "Add flowspec rule to the routers",
      "patternProperties": {
        "^.+$": {
          "type": "object",
          "additionalProperties" : false,
          "properties": {
            "description": {
              "type": "string"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "tcp",
                "udp",
                "ip",
                "ah",
                "egp",
                "esp",
                "gre",
                "icmp",
                "icmp6",
                "igmp",
                "ipip",
                "ospf",
                "pim",
                "rsvp",
                "sctp",
                "[tcp udp]"
              ]
            },
            "destination": {
              "type": "string",
              "format": "ip_network"
            },
            "source": {
              "type": "string",
              "format": "ip_network"
            }
          }
        }
      }
    },
    "security_zones": {
      "type": "array",
      "minProperties": 2,
      "prefixItems": [
        {
          "type": "object",
          "additionalProperties" : false,
          "properties": {
            "name": {
              "type": "string"
            },
            "services": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "string"
                }
              ]
            },
            "interfaces": {
              "type": "array",
              "prefixItems": [
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ]
    },
    "tunnels": {
      "type": "object",
      "description": "GRE tunnels source/destination",
      "additionalProperties" : false,
      "patternProperties": {
        "^.+$": {
          "type": "object",
          "additionalProperties" : false,
          "properties": {
            "source": {
              "type": "string",
              "format": ["ipv4", "ipv6"]
            },
            "destination": {
              "type": "string",
              "format": ["ipv4", "ipv6"]
            }
          }
        }
      }
    },
    "security_log": {
      "type": "object",
      "additionalProperties" : false,
      "description": "Configure Juniper's security logs",
      "properties": {
        "source": {
          "type": "string",
          "description": "Local source IP.",
          "format": ["ipv4", "ipv6"]
        },
        "streams": {
          "type": "object",
          "additionalProperties" : false,
          "patternProperties": {
            "^.+$": {
              "type": "string",
              "format": ["ipv4", "ipv6"],
              "description": "Unique name and destination IP."
            }
          }
        }
      }
    },
    "screen": {
      "type": "object",
      "additionalProperties" : false,
      "properties": {
        "icmp_flood_threshold": {
          "type": "integer"
        },
        "tcp_syn_flood_alarm": {
          "type": "integer"
        },
        "tcp_syn_flood_attack": {
          "type": "integer"
        },
        "tcp_syn_flood_source": {
          "type": "integer"
        },
        "tcp_syn_flood_dest": {
          "type": "integer"
        },
        "udp_flood": {
          "type": "integer"
        }
      }
    },
    "asn": {
      "type": "integer",
      "description": "Primary ASN of the device."
    },
    "confed": {
      "type": "integer"
    },
    "mgmt_gw": {
      "type": "string",
      "format": ["ipv4", "ipv6"]
    },
    "mgmt_junos": {
      "type": "boolean",
      "description": "Configure the mgmt_junos routing instance (default: true)"
    },
    "customers": {
      "type": "array",
      "minProperties": 1,
      "prefixItems": [
        {
          "type": "integer"
        }
      ]
    },
    "sampling": {
      "type": "object",
      "additionalProperties" : false,
      "properties": {
        "collectors": { "$ref": "#/definitions/bgp_neighbor_single_af" }
      }
    },
    "bgp_out": {
      "type": "object",
      "format": "ip_network",
      "additionalProperties": {
        "type": "string"
      }
    },
    "bgp6_out": {
      "type": "object",
      "format": "ip_network",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ping_offload_vip": {
      "type": "string",
      "format": "ip_interface"
    },
    "ping_offload_redirect": {
      "type": "string",
      "format": "ipv4"
    },
    "dhcp_server": {
      "type": "object",
      "additionalProperties" : false,
      "properties": {
        "name": {
          "type": "string"
        },
        "ip": {
          "type": "string",
          "format": "ipv4"
        }
      }
    },
    "dhcp_relay_ra": {
      "type": "array",
      "description": "Controls interfaces to get DHCP relay and IPv6 RAs enabled on CRs",
      "minProperties": 1,
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "capirca": {
      "type": "array",
      "minProperties": 1,
      "description": "List of Capirca policy files to apply",
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "bgp_keys": {
      "type": "object",
      "desription": "Per peer md5 auth key for BGP sessions.",
      "format": ["ipv4", "ipv6"],
      "additionalProperties": {
        "type": "string"
      }
    },
    "license_keys": {
      "type": "array",
      "minProperties": 1,
      "description": "[Secret] some features require a license key.",
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "snmp_communities": {
      "type": "array",
      "minProperties": 1,
      "prefixItems": [
        {
          "type": "string"
        }
      ]
    },
    "netbox_driven_interfaces": {
      "type": "boolean",
      "description": "Configure interfaces using Netbox as the source of truth."
    },
    "l3_switch": {
      "type": "boolean",
      "description": "The switch also does L3 routing."
    },
    "evpn": {
      "type": "boolean",
      "description": "The switch uses BGP EVPN and VXLAN transport."
    },
    "junos_root_password": {
      "type": "string",
      "description": "[Secret]"
    },
    "junos_ospf_md5_key": {
      "type": "string",
      "description": "[Secret]"
    },
    "junos_vrrp_key": {
      "type": "string",
      "description": "[Secret]"
    },
    "blackhole": {
      "type": "array",
      "description": "Network prefixes to ban, v4 and v6 with subnet",
      "prefixItems": [
        {
          "type": "string",
          "format": "ip_network"
        }
      ]
    },
    "block80": {
      "type": "array",
      "description": "Network prefixes to ban port80 traffic, v4 and v6 with subnet",
      "prefixItems": [
        {
          "type": "string",
          "format": "ip_network"
        }
      ]
    },
    "rpki_whitelist": {
      "type": "array",
      "description": "Force router to accept a RPKI invalid prefix.",
      "prefixItems": [
        {
          "type": "object",
          "additionalProperties" : false,
          "properties": {
            "maxlen": {
              "type": "int"
            },
            "asn": {
              "type": "int"
            },
            "prefix": {
              "type": "string",
              "format": "ip_network"
            }
          },
          "required": [
            "description",
            "network"
          ]
        }
      ]
    },
    "device_bgp": {
      "type": "object",
      "description": "Device-specific BGP peerings, nested to avoid namespace collision.",
      "properties": {
        "anycast": { "$ref": "#/definitions/bgp_neighbor_opt_v6" },
        "pybal": { "$ref": "#/definitions/bgp_neighbor_single_af" },
        "k8s": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "k8s_stage": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "k8s_mlserve": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "k8s_mlstaging": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "k8s_dse": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "k8s_aux": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "cr_switch": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "switch_cr": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "mr_sw": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "sw_mr": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "ris": { "$ref": "#/definitions/bgp_neighbor_dual_af" },
        "bgptools": { "$ref": "#/definitions/bgp_neighbor_dual_af" }
      },
      "additionalProperties": false
    },
    "evpn_bgp": {
      "type": "object",
      "description": "BGP EVPN members and cluster vars for given site.",
      "properties": {
        "rr": {
          "type": "object",
          "description": "Dict of cluster RRs.  Key is device name, value is device loopback.",
          "additionalProperties": {
            "type": "string",
            "format": "ipv4"
          }
        },
        "clients": {
          "type": "object",
          "description": "Dict of cluster RR clients.  Key is device name, value is device loopback.",
          "additionalProperties": {
            "type": "string",
            "format": "ipv4"
          }
        }
      }
    },
    "static_routes": {
      "type": "object",
      "description": "Static routes to be added to a device.",
      "format": "ip_network",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "next_hop": {
            "type": "string",
            "format": ["ipv4", "ipv6"]
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "esi_lag": {
      "type": "object",
      "description": "Mecanism to define AE int as an esi-lag and provide ID.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ike_psk": {
      "type": "object",
      "description": "Dict for IKE PSKs keyed by the Netbox tunnel name.",
      "additionalProperties": {
        "type": "string"
      }
    }
  }
}
